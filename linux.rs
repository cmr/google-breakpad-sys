/* automatically generated by rust-bindgen */

pub enum Struct_breakpad_minidump_descriptor { }
pub type breakpad_minidump_descriptor = Struct_breakpad_minidump_descriptor;
pub enum Struct_breakpad_eh { }
pub type breakpad_eh = Struct_breakpad_eh;
pub enum Struct_breakpad_crash_generation_client { }
pub type breakpad_crash_generation_client =
    Struct_breakpad_crash_generation_client;
pub enum Struct_breakpad_crash_generation_server { }
pub type breakpad_crash_generation_server =
    Struct_breakpad_crash_generation_server;
pub enum Struct_breakpad_client_info { }
pub type breakpad_client_info = Struct_breakpad_client_info;
pub type breakpad_filter_cb =
    ::std::option::Option<extern "C" fn(context: *mut ::libc::c_void) -> u8>;
pub type breakpad_minidump_cb =
    ::std::option::Option<extern "C" fn(minidump_descriptor:
                                            *const breakpad_minidump_descriptor,
                                        context: *mut ::libc::c_void,
                                        succeeded: u8) -> u8>;
pub type breakpad_handler_cb =
    ::std::option::Option<extern "C" fn(crash_context: *const ::libc::c_void,
                                        crash_context_size: size_t,
                                        context: *mut ::libc::c_void) -> u8>;
pub type breakpad_on_client_dump_request_cb =
    ::std::option::Option<extern "C" fn(context: *mut ::libc::c_void,
                                        client_info:
                                            *const breakpad_client_info,
                                        file_path: *const ::libc::c_char)
                              -> u8>;
pub type breakpad_on_client_exiting_cb =
    ::std::option::Option<extern "C" fn(context: *mut ::libc::c_void,
                                        client_info:
                                            *const breakpad_client_info)
                              -> u8>;

#[link(name = "breakpad_client_c", kind = "static")]
extern "C" {
    pub fn breakpad_eh_create(descriptor: *const breakpad_minidump_descriptor,
                              filter: breakpad_filter_cb,
                              cb: breakpad_minidump_cb,
                              cb_context: *mut ::libc::c_void,
                              install_handler: u8, server_fd: ::libc::c_int)
     -> *mut breakpad_eh;
    pub fn breakpad_eh_destroy(eh: *mut breakpad_eh) -> ();
    pub fn breakpad_eh_minidump_descriptor(eh: *const breakpad_eh)
     -> *const breakpad_minidump_descriptor;
    pub fn breakpad_eh_set_minidump_descriptor(eh: *mut breakpad_eh,
                                               descriptor:
                                                   *const breakpad_minidump_descriptor)
     -> ();
    pub fn breakpad_eh_set_crash_handler(eh: *mut breakpad_eh,
                                         cb: breakpad_handler_cb) -> ();
    pub fn breakpad_eh_set_crash_generation_client(eh: *mut breakpad_eh,
                                                   client:
                                                       *mut breakpad_crash_generation_client)
     -> ();
    pub fn breakpad_eh_write_minidump(eh: *mut breakpad_eh) -> u8;
    pub fn breakpad_eh_add_mapping_info(eh: *mut breakpad_eh,
                                        name: *const ::libc::c_char,
                                        identifier: *mut uint8_t,
                                        start_address: uintptr_t,
                                        mapping_size: size_t,
                                        file_offset: size_t) -> ();
    pub fn breakpad_eh_register_app_memory(eh: *mut breakpad_eh,
                                           ptr: *mut ::libc::c_void,
                                           len: size_t) -> ();
    pub fn breakpad_eh_unregister_app_memory(eh: *mut breakpad_eh,
                                             ptr: *mut ::libc::c_void) -> ();
    pub fn breakpad_eh_handle_signal(eh: *mut breakpad_eh, sig: ::libc::c_int,
                                     info: *mut siginfo_t,
                                     uc: *mut ::libc::c_void) -> ();
    pub fn breakpad_minidump_descriptor_create_from_path(directory:
                                                             *const ::libc::c_char)
     -> *mut breakpad_minidump_descriptor;
    pub fn breakpad_minidump_descriptor_create_from_fd(fd: ::libc::c_int)
     -> *mut breakpad_minidump_descriptor;
    pub fn breakpad_minidump_descriptor_create_microdump_on_console()
     -> *mut breakpad_minidump_descriptor;
    pub fn breakpad_minidump_descriptor_is_fd(descriptor:
                                                  *const breakpad_minidump_descriptor)
     -> u8;
    pub fn breakpad_minidump_descriptor_get_fd(descriptor:
                                                   *const breakpad_minidump_descriptor)
     -> ::libc::c_int;
    pub fn breakpad_minidump_descriptor_get_path(descriptor:
                                                     *const breakpad_minidump_descriptor)
     -> *const ::libc::c_char;
    pub fn breakpad_minidump_descriptor_is_microdomp_on_console(descriptor:
                                                                    *const breakpad_minidump_descriptor)
     -> u8;
    pub fn breakpad_minidump_descriptor_set_size_limit(descriptor:
                                                           *mut breakpad_minidump_descriptor,
                                                       limit: off_t) -> ();
    pub fn breakpad_minidump_descriptor_get_size_limit(descriptor:
                                                           *const breakpad_minidump_descriptor)
     -> off_t;
    pub fn breakpad_crash_generation_client_try_create(server_fd:
                                                           ::libc::c_int)
     -> *mut breakpad_crash_generation_client;
    pub fn breakpad_crash_generation_client_request_dump(client:
                                                             *mut breakpad_crash_generation_client,
                                                         blob:
                                                             *const ::libc::c_void,
                                                         blob_size: size_t)
     -> u8;
    pub fn breakpad_crash_generation_server_create(listen_fd: ::libc::c_int,
                                                   dump_cb:
                                                       breakpad_on_client_dump_request_cb,
                                                   dump_context:
                                                       *mut ::libc::c_void,
                                                   exit_cb:
                                                       breakpad_on_client_exiting_cb,
                                                   exit_context:
                                                       *mut ::libc::c_void,
                                                   generate_dumps: u8,
                                                   dump_path:
                                                       *const ::libc::c_char)
     -> *mut breakpad_crash_generation_server;
    pub fn breakpad_crash_generation_server_create_report_channel(server_fd:
                                                                      *mut ::libc::c_int,
                                                                  client_fd:
                                                                      *mut ::libc::c_int)
     -> u8;
    pub fn breakpad_crash_generation_server_destroy(server:
                                                        *mut breakpad_crash_generation_server)
     -> ();
    pub fn breakpad_crash_generation_server_start(server:
                                                      *mut breakpad_crash_generation_server)
     -> u8;
    pub fn breakpad_crash_generation_server_stop(server:
                                                     *mut breakpad_crash_generation_server)
     -> ();
}
